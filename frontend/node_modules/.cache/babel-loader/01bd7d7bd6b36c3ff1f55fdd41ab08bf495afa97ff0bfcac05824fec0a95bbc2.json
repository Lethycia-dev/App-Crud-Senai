{"ast":null,"code":"// Aula: Criando o componente de registro\n// Objetivo: Criar um formulário para registrar usuários via API\n// Importa o React e useState para gerenciar estado\nimport React,{useState}from'react';// Importa o axios para fazer requisições HTTP\nimport axios from'axios';// Define o componente Register\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Register=()=>{// Estado para o email\nconst[email,setEmail]=useState('');// Estado para a senha\nconst[password,setPassword]=useState('');// Estado para a mensagem de resposta\nconst[message,setMessage]=useState('');// Função para lidar com o envio do formulário\nconst handleSubmit=async e=>{// Impede o comportamento padrão do formulário\ne.preventDefault();try{// Faz uma requisição POST para a rota de registro\nconst response=await axios.post('http://localhost:3001/api/auth/registro',{email,password});// Define a mensagem de sucesso\nsetMessage(\"Sucesso: \".concat(response.data.message,\" (ID: \").concat(response.data.userId,\")\"));// Limpa os campos\nsetEmail('');setPassword('');}catch(error){var _error$response,_error$response$data;// Define a mensagem de erro\nsetMessage(\"Erro: \".concat(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Falha ao registrar'));}};// Renderiza o componente\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"Registro\"}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-info\",children:message}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"form-label\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"form-label\",children:\"Senha\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"form-control\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Registrar\"})]})]});};// Exporta o componente\nexport default Register;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","Register","email","setEmail","password","setPassword","message","setMessage","handleSubmit","e","preventDefault","response","post","concat","data","userId","error","_error$response","_error$response$data","className","children","onSubmit","htmlFor","type","id","value","onChange","target","required"],"sources":["C:/Users/programador/Documents/Mayra/Programação de Aplicativos/app-crud-senai2/frontend/src/components/Register.js"],"sourcesContent":["// Aula: Criando o componente de registro\r\n// Objetivo: Criar um formulário para registrar usuários via API\r\n\r\n// Importa o React e useState para gerenciar estado\r\nimport React, { useState } from 'react';\r\n// Importa o axios para fazer requisições HTTP\r\nimport axios from 'axios';\r\n\r\n// Define o componente Register\r\nconst Register = () => {\r\n    // Estado para o email\r\n    const [email, setEmail] = useState('');\r\n    // Estado para a senha\r\n    const [password, setPassword] = useState('');\r\n    // Estado para a mensagem de resposta\r\n    const [message, setMessage] = useState('');\r\n\r\n    // Função para lidar com o envio do formulário\r\n    const handleSubmit = async (e) => {\r\n        // Impede o comportamento padrão do formulário\r\n        e.preventDefault();\r\n        try {\r\n            // Faz uma requisição POST para a rota de registro\r\n            const response = await axios.post('http://localhost:3001/api/auth/registro', { email, password });\r\n            // Define a mensagem de sucesso\r\n            setMessage(`Sucesso: ${response.data.message} (ID: ${response.data.userId})`);\r\n            // Limpa os campos\r\n            setEmail('');\r\n            setPassword('');\r\n        } catch (error) {\r\n            // Define a mensagem de erro\r\n            setMessage(`Erro: ${error.response?.data?.message || 'Falha ao registrar'}`);\r\n        }\r\n    };\r\n\r\n    // Renderiza o componente\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h2 className=\"text-center\">Registro</h2>\r\n            {/* Exibe a mensagem de resposta */}\r\n            {message && <div className=\"alert alert-info\">{message}</div>}\r\n            {/* Formulário de registro */}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Senha</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Registrar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Exporta o componente\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}